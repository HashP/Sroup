<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="com.cj.sroup.dao.listDao">   
   
   <select id="getAllStudies" parameterType="map" resultType="Lists">
		select
			study_no,
  			study_name, 
  			s_image, 
  			s_max_person,
  			s_max_person - (
   							select count(*)
   							from study_management
   							where study_no = study.STUDY_NO
   						   ) as available
   		from study
   		<where>
   			hidden = 'N'
   			and 
   			s_application_period >= sysdate
	   		<if test="item1 != null">
		        and c_subject in
		        <foreach collection="item1" item="item" index="index1" separator="," open="(" close=")">
		            #{item}
		        </foreach>
	   		</if>
	   		<if test="item2 != null">
		        and c_area in
		        <foreach collection="item2" item="item" index="index2" separator="," open="(" close=")">
		            #{item}
		        </foreach>
	   		</if>
	   		<if test="max != null">
	   			and #{max} >= s_dues and s_dues > #{min} 
	   		</if>
   		</where>
   		order by ${orderby} ${sort}
   </select>
   
   <select id="getAllStudiesDefault" resultType="Lists">
		select
			study_no,
  			study_name, 
  			s_image, 
  			s_max_person,
  			s_max_person - (
   							select count(*)
   							from study_management
   							where study_no = study.STUDY_NO
   						   ) as available
   		from study
   		where hidden = 'N'
   			and 
   			s_application_period >= sysdate
   		order by s_hit desc
   </select>
   <select id="getAllStudiesBySearch" parameterType="string" resultType="Lists">
		select
			study_no,
  			study_name, 
  			s_image, 
  			s_max_person,
  			s_max_person - (
   							select count(*)
   							from study_management
   							where study_no = study.STUDY_NO
   						   ) as available
   		from study
   		where study_name like '%'||#{value}||'%' or c_subject like '%'||#{value}||'%' and hidden = 'N'
   		order by s_hit desc
   </select>
   
   <insert id="addCheck" parameterType="CheckVO">
   		insert into phone_check (user_id, check_code)
   						values(
   						#{user_id}, 
   						#{check_code}
   						)
   </insert>
   <select id="userCheck" parameterType="string" resultType="CheckVO">
   		select 
   			user_id, check_code, check_y_or_n
   		from
   			phone_check
   		where
   			user_id = #{user_id}
   </select>
   <update id="modifyCheck" parameterType="CheckVO">
   		update phone_check
   			set user_id = #{user_id},
   				check_code = #{check_code},
   				check_y_or_n = #{check_y_or_n}
   			where user_id = #{user_id}
   </update>
   
   <update id="studyHidden" parameterType="integer">
   		update study
   			set hidden = 'Y'   			
   		where study_no = #{study_no}
   </update>
   
   <update id="studyModify" parameterType="Study">
   		update study
   			set study_name = #{study_name},
   				c_area = #{c_area},
   				c_subject = #{c_subject},
   				p_address = #{p_address},
   				end_date = #{end_date},
   				start_date = #{start_date},
   				join_able = #{join_able},
   				s_summary = #{s_summary},
   				s_detail = #{s_detail},
   				s_image = #{s_image},
   				s_dues = #{s_dues},
   				s_max_person = #{s_max_person},
   				s_area = #{s_area},
   				s_application_period = #{s_application_period},
   				s_admit_method = #{s_admit_method},
   				map_lat = #{map_lat},
   				map_lng = #{map_lng},
   				start_date_time = #{start_date_time},
   				end_date_time = #{end_date_time},
   				s_application_period_time = #{s_application_period_time}
   			where study_no = #{study_no}
   </update>
   <select id="pAddrCheck" parameterType="string" resultType="Study">
   		select 
   			p_address
   		from
   			study
   		where
   			p_address = #{p_address}		
   </select>
   <select id="getCategories" resultType="Category">
   		select 
   			subject, sub_value
   		from
   			c_subject
   </select>
   <select id="getArea" resultType="Category">
   		select 
   			area, area_value
   		from
   			c_area
   </select>
   <insert id="addStudy" parameterType="Study">
   		insert into study(
   						study_no, study_name, user_id, c_area, c_subject, p_address, end_date, start_date,
   						join_able, s_summary, s_detail, s_image, s_dues, s_max_person, s_area, s_application_period, s_admit_method,
   						write_day, s_hit, map_lat, map_lng, start_date_time, end_date_time, s_application_period_time
   						)
   					values(
   						#{study_no}, #{study_name}, #{user_id}, #{c_area}, #{c_subject}, #{p_address}, #{end_date}, #{start_date},
   						#{join_able}, #{s_summary}, #{s_detail}, #{s_image}, #{s_dues}, #{s_max_person}, #{s_area}, #{s_application_period},
   						#{s_admit_method}, sysdate, 0, #{map_lat}, #{map_lng}, #{start_date_time}, #{end_date_time}, #{s_application_period_time}
   					)
   </insert>
   <select id="getSubjectByNo" parameterType="string" resultType="string">
   		select
   			subject
   		from
   			c_subject
   		where
   			sub_value = #{sub_value}
   </select>
   
   <select id="getSubValueyByCategory" parameterType="string" resultType="string">
   		select
   			sub_value
   		from
   			c_subject
   		where
   			subject = #{subject}
   </select>
   
   <select id="getStudyNo" resultType="integer">
   		select
   			study_seq.nextval
   		from
   			dual
   </select>
	<insert id="addJoin" parameterType="JoinVO">
   		insert into join(
   							study_no, applicant, reg_date, s_admit
   						)
   					values(
   						#{study.study_no}, #{applicant.id}, sysdate, #{admit}
   					)
   		
   </insert>
   <insert id="addStudyManagement" parameterType="StudyManagementVO">
   		insert into study_management(study_no, user_id, user_grade)
   							values (#{study.study_no}, #{user.id}, #{grade})
   </insert>
   <select id="getStudyManagementInfo" parameterType="StudyManagementVO" resultType="StudyManagementVO">
   		select
   			study_no as "study.study_no",
   			user_id as "user.id",
   			user_grade as grade
   		from
   			study_management
   		where
   			study_no = #{study.study_no} and user_id = #{user.id} and user_grade = #{grade}
   </select>
   <select id="getAvailable" resultType="Study" parameterType="integer">
   		select
   			study_no, s_max_person,  s_max_person - (
   													select count(*)
   													from study_management
   													where study_no = study.STUDY_NO
   													) as available
   		from study
   		where study_no = #{study_no}
   </select>
   <select id="getStudyInfoByNo" parameterType="integer" resultType="Study">
   		select
   			*
   		from
   			study
   		where
   			study_no = #{study_no}
   </select>
   <select id="getJoinInfo" parameterType="JoinVO" resultType="JoinVO">
   		select
   			study_no as "study.study_no",
   			applicant as "applicant.id",
   			reg_date as regDate,
   			s_admit as admit
   		from
   			join
   		where
   			study_no = #{study.study_no} and applicant = #{applicant.id}
   </select>
   <delete id="deleteJoin" parameterType="JoinVO">
   		delete from join
   		where study_no = #{study.study_no} and applicant = #{applicant.id}
   </delete>
   <update id="studyHit" parameterType="integer">
   		update study
   		set s_hit = s_hit + 1
   		where study_no = #{value}
   </update>
   <insert id="createSequence">
     CREATE SEQUENCE  p_address
        INCREAMENT BY 1
        START WITH 1
        NOCACHE;
   </insert>
   
</mapper>